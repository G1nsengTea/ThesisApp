<Window x:Class="ThesisApp.Views.HelpWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ThesisApp.Views"
        mc:Ignorable="d" FontSize="17" FontFamily="Segoe UI Semilight"
        MinHeight="500" MinWidth="700"
        WindowStyle="ToolWindow"
        WindowStartupLocation="CenterScreen">
    <!-- This is the UI of the Help window-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <TextBlock Text="Benchmark help"
                   HorizontalAlignment="Center"
                   FontSize="30"
                   Grid.Row="0"
                   Margin="5"/>
        <ScrollViewer Grid.Row="1">

            <!-- StackPanel with several TextBlocks to display the inforation -->
            <StackPanel Orientation="Vertical" Margin="10">
                
                <TextBlock HorizontalAlignment="Stretch"
                       Text="This benchmark is part of Oleksii Lahushchenko's bachelor thesis and is used to showcase how different threading techniques influence the behavior of the application. The following are the descriptions of user controls how the application works."
                       TextWrapping="Wrap"
                       TextAlignment="Justify">
                </TextBlock>

                <TextBlock TextAlignment="Center"
                         Text="Execution modes"
                         FontSize="22"
                         Margin="5">
                </TextBlock>
                <TextBlock TextWrapping="Wrap"
                           TextAlignment="Justify">
                    <Run FontWeight="SemiBold" FontFamily="Segoe UI" Text="Synchronous execution"/>
                    <Run Text="- In this mode benchmark is executed synchronously – no threading techniques are applied. Please note that during synchronous execution UI is not updated, meaning that application will appear &quot;frozen&quot; until all tests are finished."/>
                    <LineBreak/>
                    <Run FontWeight="SemiBold" FontFamily="Segoe UI" Text="Asynchronous execution"/>
                    <Run Text="- In this mode benchmark is executed asynchronously. While all tests are running application remains responsive and UI is being constantly updated."/>
                    <LineBreak/>
                    <Run FontWeight="SemiBold" FontFamily="Segoe UI" Text="Parallel execution"/>
                    <Run Text="- Similarly to synchronous execution UI is not updated while benchmark is running in parallel mode, however, because all 3 tasks are executed in parallel (at the same time), overall execution time is lower than during synchronous execution."/>
                    <LineBreak/>
                    <Run FontWeight="SemiBold" FontFamily="Segoe UI" Text="Parallel + Asynchronous execution"/>
                    <Run Text="- This mode combines the best of parallel and asynchronous executions. While all 3 tasks are executed at the same time, application remains responsive like in asynchronous mode."/>
                </TextBlock>

                <TextBlock TextAlignment="Center"
                         Text="Controls"
                         FontSize="22"
                         Margin="5">
                </TextBlock>
                <TextBlock TextWrapping="Wrap"
                           TextAlignment="Justify">
                    <Run FontWeight="SemiBold" FontFamily="Segoe UI" Text="Cancel Operation"/>
                    <Run Text="- Allows to prematurely cancel current benchmark run. Cancellation is available only in Asynchronous and Parallel + Asynchronous modes."/>
                    <LineBreak/>
                    <Run FontWeight="SemiBold" FontFamily="Segoe UI" Text="Reset"/>
                    <Run Text="- Used to reset tests and UI to their default state. It is necessary to manually reset UI only before running application in Synchronous and Parallel modes, since in Asynchronous modes UI will reset automatically."/>
                    <LineBreak/>
                    <Run FontWeight="SemiBold" FontFamily="Segoe UI" Text="Display Results"/>
                    <Run Text="- Used to display the results of all tests executions in a separate window."/>
                </TextBlock>

                <TextBlock TextAlignment="Center"
                         Text="Tests"
                         FontSize="22"
                         Margin="5">
                </TextBlock>
                <TextBlock TextWrapping="Wrap"
                           TextAlignment="Justify">
                    <Run FontWeight="SemiBold" FontFamily="Segoe UI" Text="Test 1 &quot;Image Test&quot;"/>
                    <Run Text="- During this test the image that is originally desaturated gradually becomes colorized. The aim of this test is to load CPU with a large amount of array operations. At first coordinate of every pixel of the colorized picture is assigned to a jagged array, then array is shuffled and finally the image is &quot;restored&quot; by replacing colors of resulting bitmap image, which originally contains desaturated picture, with colors of colorized bitmap image, following the pattern of the shuffled array. While running benchmark in asynchronous mode You can observe how picture gradually becomes colorized in a random pattern. Because UI is not updated during synchronous and parallel executions, picture becomes colorized at once, once the test is finished."/>
                    <LineBreak/>
                    <Run FontWeight="SemiBold" FontFamily="Segoe UI" Text="Test 2 &quot;Prime Numbers Test&quot;"/>
                    <Run Text="- The aim of this test is to give CPU a large number of arithmetic operations. Test consists of 2 parts – in first part computer calculates how many prime numbers there are in a given range (in this case from 2 to 3000000). In the second part computer is calculating what is the Nth prime number (in this case 200000th prime number)."/>
                    <LineBreak/>
                    <Run FontWeight="SemiBold" FontFamily="Segoe UI" Text="Test 3 &quot;Websites Test&quot;"/>
                    <Run Text="- In this test the computer loads in background 10 websites. The aim of this test is to showcase how different threading techniques can improve application performance while executing web requests. In the application UI there are 10 desaturated icons each representing a website. Once corresponding website is downloaded, icon becomes colorized. Similarly to the Image test, icons will become colorized all at once after synchronous and parallel execution, while during asynchronous executions icons will become colorized gradually, once corresponding website is downloaded."/>
                </TextBlock>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Window>
